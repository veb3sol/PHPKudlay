<?php
 //функции файловой системы

//copy() - копирует файл
// вернет true - файл скопирован удачно, false - при копировании возникла ошибка
// 1 арг  - путь к файлу который надо скопировать
// 2 арг - путь куда надо скопировать, если такого пути нету - ошибка!
// в пути куда скопировать мы может указывать новое название файла.
//var_dump(copy('text.txt', 'files/text1.txt'));

//file_exists()  - проверяет существование файла или каталога
// один аргумент - путь к файлу или каталогу, вернет true или false

//if(file_exists(__DIR__.'/files/text1.txt')){
//    echo 'файл существует';
//} else {
//    echo 'такого файла нету!';
//}

//file_get_contents() - читает содержимое файла в строку . можно читать удаленный файл по определенному адресу
// 1 арг - путь или адрес к файлу который надо считать
//echo file_get_contents('files/content.txt');   - строка 1 строка 2 строка 3 строка 4 строка 5 строка 6 строка 7
// если надо переводы строки \n преобразовать в переводы при выводе в '<br>'
//echo nl2br(file_get_contents('files/content.txt'));

//echo file_get_contents('https://vidbgrem.media.io/app/'); -- выведет страничку без стилей

//file_put_contents() - пишет даннные в файл, идентична последовательности функций fopen(), fwrite(), fclose()
// 1 арг - путь к файлу куда надо записать данные ... если файла нету, то он создается
// 2 арг - данные которые надо записать
// 3 арг - что сделать - переписать, дописать
// вернет количество записаных байт - запись прошла удачно,  false - ошибка при записи

//$z = file_get_contents('text.txt');  -- считываем данные что бы записать в другой файл
//var_dump(file_put_contents('zapis.txt', $z)); -- int(12) - вернула количество записаных байт, по умолчанию - перезаписывает файл
// если надо дописать данные в существующий файл - надо использовать флаг - FILE_APPEND
//$z = file_get_contents('text.txt');
//var_dump(file_put_contents('zapis.txt', $z, FILE_APPEND));

//file() - читает содержимое файла и помещает его в массив
// обычно используется 1 аргумент - путь к файлу, но может быть и 2 аргумент флаг
//print_r(file('zapis.txt'));  -- каждая строка как элемент нумерованого массива
//print_r(file('zapis.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES)); // -- пропустить пустые строки

//move_uploaded_file() - перемещает загруженный файл в новое место
//rename() - переименовывает файл или деректорию
// 1 арг - текущий путь с названием файла
// 2 арг - во что переименовать файл
// вернет true - удачное переименование, false - ошибка
//rename('zapis.txt', 'zapis2.txt')
// вообще это не переименование, а перемещение
//rename('zapis2.txt', 'files/z4.txt')

//mkdir() - создает директорию
// 1 арг - директория которую надо создать - об арг
// 2 арг - права на создаваэмую директорию -- 0777, 0664, .... разобраться  -- необ парам
//var_dump(mkdir('test'));
// если надо создать директорию в дериктории
//var_dump(mkdir('1/2/3', 0644)); -- ошибка, потому что создать директорию можно только в существующей директории
// var_dump(mkdir('1/2/3', 0644, true));  -- 3 арг - true - разрешает создавать вложенные директории

//rmdir() - удаляет деректорию -- она должна быть пустой
//1 арг - директория которую надо удалить

//unlink() - удаляет файл
// 1 арг - путь к файлу который надо удалить
// вернет true - удачно удалился файл, false - ошибка при удалении
//var_dump(@unlink('files/z4.txt'));

?>