<?php
// 81 функция для работы с массивами

// count - подсчитывает количество элементов массива или чего либо в обьекте
// 1 аргумент - массив
// 2 аргумент - по умолчанию COUNT_NORMAL, но может быть COUNT_RECURSIVE(или 1)
// COUNT_NORMAL(или 0) - учитывать тольлко 1 уровень вложенности массива (только корневые)
// COUNT_RECURSIVE(или 1) - считаются и вложенные массивы (корневые + вложенные)

//array_count_values() - подсчитывает кол всех значений массива
// вернет массив, ключами которого будут значения входящего массива
// значениями будут - количество раз сколько этот ключ встречается в качестве значения в входящем массиве
// например Array ( [1] => 2 [2] => 3 [3] => 2 [4] => 1 [5] => 2 [6] => 1 [7] => 2 [8] => 2 [9] => 1 )
// 1 встречается 2 раза, 2 встречается 3 раза .... в входящем массиве
// обрабатывает только маччивы со строками и числами !!!




//array_key_exists()  - проверяет присутствует ли в массиве указаный ключ или индекс
// 1 аргумент - искомый ключ или индекс
// 2 аргумент - массив в котором будет проходить поиск
// если такой ключ есть - вернет true, если такого ключа нету - false


//in_array() - проверяет, присутствует ли в массиве значение
// 1 параметр - искомое значение в массиве любого типа
// 2 параметр - массив

//array_search() - осуществляет поиск даного значения в массиве и возращает ключ первого найденого элемента в случае удачи
// 1 параметр - искомое значение в массиве любого типа
// 2 параметр - массив
//если такой элемент есть - вернется ключ/индекс этого элемента, если нету - false


//array_keys() - возращает все или подмножество ключей массива
// вернет массив ключей входящего массива


// array_values - выбирает все значения массива
// вернет тот же массив, но ключами будут цифры

//array_unique() - убирает повторяющиеся ключи с массива
// убирает и значения и ключи под которыми были это значения

$goods = [
    [
        'title'=> 'Nokia',
        'price'=> '100',
        'qty'=> '10',
    ],
    [
        'title'=> 'Sony',
        'price'=> '120',
        'qty'=> '7',
    ],
    [
        'title'=> 'LG',
        'price'=> '105',
        'qty'=> '15',
    ],
];

$car = [
    'brand' => 'Toyota',
    'model' => 'Camry',
    'year' => 2021,
    'speed' => 220,
    'wheels' => 4,
];

$nums = [1,2,3,1,4,5,3,2,6,7,7,8,8,9,2,5,];

echo count($goods); //3
echo count($goods, 0); //3
echo count($goods, 1); //12 -- 3 корневых + 9 (в каждом корневом по 3)

echo '<hr>';
print_r(array_count_values($nums)) ;
echo '<hr>';
var_dump(array_key_exists('year1', $car)); // true
// использовали var_dump потому что при print_r выводится строка и true => '1', false => ''

echo '<hr>';
var_dump(in_array('Camry', $car)); // true

echo '<hr>';
var_dump(array_search(4, $car));    //string(6) "wheels"

echo '<hr>';
print_r(array_keys($car)); //Array ( [0] => brand [1] => model [2] => year [3] => speed [4] => wheels )

echo '<hr>';
print_r(array_values($car)); //Array ( [0] => Toyota [1] => Camry [2] => 2021 [3] => 220 [4] => 4 )

echo '<hr>';
print_r(array_unique($nums)); // Array ( [0] => 1 [1] => 2 [2] => 3 [4] => 4 [5] => 5 [8] => 6 [9] => 7 [11] => 8 [13] => 9 )

//анопимные функции на примере функции array_filter
//array_filter - фильтрует элементы массива с помощью callback - функции

function odd($var){
    return $var%2; // true - если $var - нечетное, false - если $var четное
}
function even($var){
    return !($var%2); //true - четное, false - нечетное
}
echo '<hr>';
print_r(array_filter($nums, 'odd')); // массив нечетных с $nums
echo '<hr>';
print_r(array_filter($nums, 'even')); //массив четных с $nums

// каждый елемент с $nums попадает по очереди в указаную функцию как аргумент $var
// если при этом функция вернет true - то элемент записывается в результирую

echo '<hr>';

//array_filter с анонимной функцией
// вывод массива с элементами массива $nums, с теми которые больше или равны 7
print_r(array_filter($nums, function ($var){
    if($var >=7) return true;
    return ;
}))

// остальные функции - отдельный курс!!! - просмотреть и попробовать на php.net/manual/ref.array.php



?>